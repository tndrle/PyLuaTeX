name: Tests
env:
  cache-version: v5
on: [push]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          [
            ubuntu-20.04,
            ubuntu-22.04,
            macos-11,
            macos-12,
            windows-2019,
            windows-2022,
          ]
    timeout-minutes: 15
    steps:
      - name: OS switches and PATH
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo "tl-dir=/tmp/texlive" >> $GITHUB_ENV
            echo "/tmp/texlive/bin/x86_64-linux" >> $GITHUB_PATH
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "tl-dir=D:\texlive" >> $GITHUB_ENV
            echo "D:\texlive\bin\win32" >> $GITHUB_PATH
          else
            echo "tl-dir=/tmp/texlive" >> $GITHUB_ENV
            echo "/tmp/texlive/bin/universal-darwin" >> $GITHUB_PATH
          fi
        shell: bash
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: pip
      - name: Install Python dependencies
        run: pip install -r test/requirements.txt
      - uses: actions/cache@v3
        id: tl-env
        with:
          path: |
            ${{ env.tl-dir }}
            ~/texmf
          key: ${{ env.cache-version }}-${{ matrix.os }}-env
      - name: Install TeX Live (Windows)
        if: ${{ steps.tl-env.outputs.cache-hit != 'true' && runner.os == 'Windows' }}
        uses: ./.github/actions/texlive-windows
      - name: Install TeX Live (Unix)
        if: ${{ steps.tl-env.outputs.cache-hit != 'true' && runner.os != 'Windows' }}
        uses: ./.github/actions/texlive-unix
      - name: Install LaTeX dependencies
        if: steps.tl-env.outputs.cache-hit != 'true'
        run: |
          tlmgr option -- autobackup 0
          tlmgr update --self
          tlmgr install pgfplots lualatex-math luacode listings
          tlmgr install fvextra catchfile xstring framed minted
          tlmgr remove pyluatex || true
      - name: Copy repository to LaTeX package folder
        run: |
          rm -rf ~/texmf/tex/latex/pyluatex
          mkdir -p ~/texmf/tex/latex/pyluatex
          cp -r . ~/texmf/tex/latex/pyluatex/
        shell: bash
      - name: Run tests
        run: |
          cd test
          python3 run_tests.py
      - name: Run examples
        run: |
          cd example
          lualatex -shell-escape --interaction=nonstopmode data-visualization.tex
          lualatex -shell-escape --interaction=nonstopmode readme-example.tex
          lualatex -shell-escape --interaction=nonstopmode sessions.tex
          lualatex -shell-escape --interaction=nonstopmode matplotlib-external.tex
          lualatex -shell-escape --interaction=nonstopmode matplotlib-pgf.tex
          lualatex -shell-escape --interaction=nonstopmode typesetting-example.tex
          lualatex -shell-escape --interaction=nonstopmode typesetting-listings.tex
          lualatex -shell-escape --interaction=nonstopmode typesetting-minted.tex
          lualatex -shell-escape --interaction=nonstopmode readme-custom-env.tex
          lualatex -shell-escape --interaction=nonstopmode beamer.tex
          lualatex -shell-escape --interaction=nonstopmode repl.tex
